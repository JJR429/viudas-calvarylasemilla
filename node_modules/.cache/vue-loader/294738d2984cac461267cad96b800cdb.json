{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/vue/elecciones/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/vue/elecciones/src/views/Login.vue?vue&type=template&id=26084dc2&scoped=true&","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/vue/elecciones/src/views/Login.vue","mtime":1602336021980},{"path":"/Applications/XAMPP/xamppfiles/htdocs/vue/elecciones/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/vue/elecciones/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/vue/elecciones/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/vue/elecciones/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9InNpbmd1cCI+CiAgPGRpdiBjbGFzcz0ibG9naW4tdXNlciIgdi1pZj0icmVkaXJlY3QgPT0gJy9hZG1pbiciPgogICAgPGhlYWRlcgogICAgICBjbGFzcz0icGFnZS1oZWFkZXIgcGFnZS1oZWFkZXItZGFyayBiZy1pbWctcmVwZWF0IGJnLXdhcm5pbmciCiAgICAgIHN0eWxlPSdiYWNrZ3JvdW5kLWltYWdlOiB1cmwoImFzc2V0cy9pbWcvcGF0dGVybi1zaGFwZXMucG5nIiknCiAgICA+CiAgICAgIDxkaXYgY2xhc3M9InBhZ2UtaGVhZGVyLWNvbnRlbnQiPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgYWxpZ24taXRlbXMtY2VudGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLWxnLTYiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJiYWRnZSBiYWRnZS1tYXJrZXRpbmcgYmFkZ2UtcGlsbCBiYWRnZS1zZWNvbmRhcnkgdGV4dC13aGl0ZSBtYi0zIgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIFNlY2Npw7NuIEFkbWluCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGgxIGNsYXNzPSJwYWdlLWhlYWRlci10aXRsZSI+CiAgICAgICAgICAgICAgICBCaWVudmVuaWRvIEFkbWluCiAgICAgICAgICAgICAgPC9oMT4KICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC13aGl0ZSI+CiAgICAgICAgICAgICAgICBFc3RhIGVzIGxhIHNlY2Npw7NuIEFkbWluLCBwb2Ryw6FzIGNyZWFyIG9yZ2FuaXphY2lvbmVzIHkgYXNpZ25hciBvcmdhbml6YWRvcmVzLgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy00Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIHJvdW5kZWQtbGcgdGV4dC1kYXJrIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtaGVhZGVyIHB5LTQiPlRlIGVzdGFtb3MgZXNwZXJhbmRvITwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICAgICAgPGZvcm0gQHN1Ym1pdC5wcmV2ZW50PSJsb2dpbkFkbWluIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ic21hbGwgdGV4dC1ncmF5LTYwMCIgZm9yPSJsZWFkQ2FwRW1haWwiCiAgICAgICAgICAgICAgICAgICAgICAgID5Vc3VhcmlvIC8gQ29ycmVvPC9sYWJlbAogICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InVzZXJuYW1lIgogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIHJvdW5kZWQtcGlsbCIKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJzbWFsbCB0ZXh0LWdyYXktNjAwIiBmb3I9ImxlYWRDYXBFbWFpbCIKICAgICAgICAgICAgICAgICAgICAgICAgPkNvbnRyYXNlw7FhPC9sYWJlbAogICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InBhc3MiCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wgcm91bmRlZC1waWxsIgogICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJwYXNzd29yZCIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDxidXR0b24KICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJidG4gYnRuLXByaW1hcnkgYnRuLW1hcmtldGluZyBidG4tYmxvY2sgcm91bmRlZC1waWxsIG10LTQiCiAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJzdWJtaXQiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgSW5pY2lhciBTZXNpb24hCiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXJyb3IgbWItMyIgdi1pZj0iZXJyb3IiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1kYW5nZXIiPnt7IGVycm9yX21lc3NhZ2UgfX08L3NwYW4+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9InN2Zy1ib3JkZXItYW5nbGVkIHRleHQtd2hpdGUiPgogICAgICAgIDxzdmcKICAgICAgICAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgICAgICAgIHZpZXdCb3g9IjAgMCAxMDAgMTAwIgogICAgICAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ibm9uZSIKICAgICAgICAgIGZpbGw9ImN1cnJlbnRDb2xvciIKICAgICAgICA+CiAgICAgICAgICA8cG9seWdvbiBwb2ludHM9IjAsMTAwIDEwMCwwIDEwMCwxMDAiPjwvcG9seWdvbj4KICAgICAgICA8L3N2Zz4KICAgICAgPC9kaXY+CiAgICA8L2hlYWRlcj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJsb2dpbi11c2VyIiB2LWVsc2UtaWY9InJlZGlyZWN0ID09ICcvb3JnYW5pemFkb3JlcyciPgogICAgPGhlYWRlcgogICAgICBjbGFzcz0icGFnZS1oZWFkZXIgcGFnZS1oZWFkZXItZGFyayBiZy1pbWctcmVwZWF0IGJnLXdhcm5pbmciCiAgICAgIHN0eWxlPSdiYWNrZ3JvdW5kLWltYWdlOiB1cmwoImFzc2V0cy9pbWcvcGF0dGVybi1zaGFwZXMucG5nIiknCiAgICA+CiAgICAgIDxkaXYgY2xhc3M9InBhZ2UtaGVhZGVyLWNvbnRlbnQiPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgYWxpZ24taXRlbXMtY2VudGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLWxnLTYiPgogICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgIGNsYXNzPSJiYWRnZSBiYWRnZS1tYXJrZXRpbmcgYmFkZ2UtcGlsbCBiYWRnZS1zZWNvbmRhcnkgdGV4dC13aGl0ZSBtYi0zIgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIFNlY2Npw7NuIE9yZ2FuaXphZG9yZXMKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8aDEgY2xhc3M9InBhZ2UtaGVhZGVyLXRpdGxlIj4KICAgICAgICAgICAgICAgIEJpZW52ZW5pZG8gT3JnYW5pemFkb3IKICAgICAgICAgICAgICA8L2gxPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LXdoaXRlIj4KICAgICAgICAgICAgICAgIEVuIGVzdGEgcGFydGUgZGUgb3JnYW5pemFkb3JlcywgcG9kcmFzIGNyZWFyIGVsZWNjaW9uZXMsIHByZWd1bnRhcyB5IG9wY2lvbmVzLgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC13aGl0ZSBtdC01Ij7Cv0HDum4gbm8gdGllbmVzIHVuYSBjdWVudGE/PC9wPgogICAgICAgICAgICAgIDxyb3V0ZXItbGluawogICAgICAgICAgICAgICAgY2xhc3M9ImJ0biBidG4td2hpdGUgYnRuLW1hcmtldGluZyByb3VuZGVkLXBpbGwiCiAgICAgICAgICAgICAgICA6dG89InsgcGF0aDogJy9yZWdpc3RyYXJzZScgfSIKICAgICAgICAgICAgICAgID5SZWfDrXN0cmF0ZSE8L3JvdXRlci1saW5rCiAgICAgICAgICAgICAgPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLWxnLTQiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgcm91bmRlZC1sZyB0ZXh0LWRhcmsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1oZWFkZXIgcHktNCI+VGUgZXN0YW1vcyBlc3BlcmFuZG8hPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICAgICAgICAgICAgICA8Zm9ybSBAc3VibWl0LnByZXZlbnQ9ImxvZ2luT3JnYW5pemFkb3IiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJzbWFsbCB0ZXh0LWdyYXktNjAwIiBmb3I9ImxlYWRDYXBFbWFpbCIKICAgICAgICAgICAgICAgICAgICAgICAgPkROSSAvIENvcnJlbzwvbGFiZWwKICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJ1c2VybmFtZSIKICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImZvcm0tY29udHJvbCByb3VuZGVkLXBpbGwiCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ic21hbGwgdGV4dC1ncmF5LTYwMCIgZm9yPSJsZWFkQ2FwRW1haWwiCiAgICAgICAgICAgICAgICAgICAgICAgID5Db250cmFzZcOxYTwvbGFiZWwKICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJwYXNzIgogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIHJvdW5kZWQtcGlsbCIKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0icGFzc3dvcmQiCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGJ0bi1tYXJrZXRpbmcgYnRuLWJsb2NrIHJvdW5kZWQtcGlsbCBtdC00IgogICAgICAgICAgICAgICAgICAgICAgdHlwZT0ic3VibWl0IgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIEluaWNpYXIgU2VzaW9uIQogICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVycm9yIG1iLTMiIHYtaWY9ImVycm9yIj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtZGFuZ2VyIj57eyBlcnJvcl9tZXNzYWdlIH19PC9zcGFuPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJzdmctYm9yZGVyLWFuZ2xlZCB0ZXh0LXdoaXRlIj4KICAgICAgICA8c3ZnCiAgICAgICAgICB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgICAgICAgICB2aWV3Qm94PSIwIDAgMTAwIDEwMCIKICAgICAgICAgIHByZXNlcnZlQXNwZWN0UmF0aW89Im5vbmUiCiAgICAgICAgICBmaWxsPSJjdXJyZW50Q29sb3IiCiAgICAgICAgPgogICAgICAgICAgPHBvbHlnb24gcG9pbnRzPSIwLDEwMCAxMDAsMCAxMDAsMTAwIj48L3BvbHlnb24+CiAgICAgICAgPC9zdmc+CiAgICAgIDwvZGl2PgogICAgPC9oZWFkZXI+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0ibG9naW4tdXNlciIgdi1lbHNlLWlmPSJyZWRpcmVjdCA9PSAnL3N1cGVydmlzb3JlcyciPgogICAgPGhlYWRlcgogICAgICBjbGFzcz0icGFnZS1oZWFkZXIgcGFnZS1oZWFkZXItZGFyayBiZy1pbWctcmVwZWF0IGJnLWdyZWVuIgogICAgICBzdHlsZT0nYmFja2dyb3VuZC1pbWFnZTogdXJsKCJhc3NldHMvaW1nL3BhdHRlcm4tc2hhcGVzLnBuZyIpJwogICAgPgogICAgICA8ZGl2IGNsYXNzPSJwYWdlLWhlYWRlci1jb250ZW50Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICAgICAgPGRpdiBjbGFzcz0icm93IGFsaWduLWl0ZW1zLWNlbnRlciI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy02Ij4KICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICBjbGFzcz0iYmFkZ2UgYmFkZ2UtbWFya2V0aW5nIGJhZGdlLXBpbGwgYmFkZ2UteWVsbG93IHRleHQtd2hpdGUgbWItMyIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICBTZWNjacOzbiBTdXBlcnZpc29yZXMKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8aDEgY2xhc3M9InBhZ2UtaGVhZGVyLXRpdGxlIj4KICAgICAgICAgICAgICAgIEJpZW52ZW5pZG8gU3VwZXJ2aXNvcgogICAgICAgICAgICAgIDwvaDE+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtd2hpdGUiPgogICAgICAgICAgICAgICAgRW4gZXN0YSBwYXJ0ZSBwb2Ryw6FzIHZlciBxdWllbiBjcmVvIGxhcyBlbGVjY2lvbmVzLCBxdWllbmVzIHNvbiBsb3MgYXB0b3BzIHBhcmEgdm90YXIsIGxvcyB1c3VhcmlvcyBkZSB0dSBvcmdhbml6YWNpw7NuIHkgbcOhcwogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC13aGl0ZSBtdC01Ij7Cv0HDum4gbm8gdGllbmVzIHVuYSBjdWVudGE/PC9wPgogICAgICAgICAgICAgIDxyb3V0ZXItbGluawogICAgICAgICAgICAgICAgY2xhc3M9ImJ0biBidG4td2hpdGUgYnRuLW1hcmtldGluZyByb3VuZGVkLXBpbGwiCiAgICAgICAgICAgICAgICA6dG89InsgcGF0aDogJy9yZWdpc3RyYXJzZScgfSIKICAgICAgICAgICAgICAgID5SZWfDrXN0cmF0ZSE8L3JvdXRlci1saW5rCiAgICAgICAgICAgICAgPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLWxnLTQiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgcm91bmRlZC1sZyB0ZXh0LWRhcmsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1oZWFkZXIgcHktNCI+VGUgZXN0YW1vcyBlc3BlcmFuZG8hPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICAgICAgICAgICAgICA8Zm9ybSBAc3VibWl0LnByZXZlbnQ9ImxvZ2luU3VwZXJ2aXNvciI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9InNtYWxsIHRleHQtZ3JheS02MDAiIGZvcj0ibGVhZENhcEVtYWlsIgogICAgICAgICAgICAgICAgICAgICAgICA+RE5JIC8gQ29ycmVvPC9sYWJlbAogICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InVzZXJuYW1lIgogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIHJvdW5kZWQtcGlsbCIKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJzbWFsbCB0ZXh0LWdyYXktNjAwIiBmb3I9ImxlYWRDYXBFbWFpbCIKICAgICAgICAgICAgICAgICAgICAgICAgPkNvbnRyYXNlw7FhPC9sYWJlbAogICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InBhc3MiCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wgcm91bmRlZC1waWxsIgogICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJwYXNzd29yZCIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDxidXR0b24KICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJidG4gYnRuLXByaW1hcnkgYnRuLW1hcmtldGluZyBidG4tYmxvY2sgcm91bmRlZC1waWxsIG10LTQiCiAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJzdWJtaXQiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgSW5pY2lhciBTZXNpb24hCiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXJyb3IgbWItMyIgdi1pZj0iZXJyb3IiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1kYW5nZXIiPnt7IGVycm9yX21lc3NhZ2UgfX08L3NwYW4+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9InN2Zy1ib3JkZXItYW5nbGVkIHRleHQtd2hpdGUiPgogICAgICAgIDxzdmcKICAgICAgICAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgICAgICAgIHZpZXdCb3g9IjAgMCAxMDAgMTAwIgogICAgICAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz0ibm9uZSIKICAgICAgICAgIGZpbGw9ImN1cnJlbnRDb2xvciIKICAgICAgICA+CiAgICAgICAgICA8cG9seWdvbiBwb2ludHM9IjAsMTAwIDEwMCwwIDEwMCwxMDAiPjwvcG9seWdvbj4KICAgICAgICA8L3N2Zz4KICAgICAgPC9kaXY+CiAgICA8L2hlYWRlcj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJsb2dpbi11c2VyIiB2LWVsc2U+CiAgICA8aGVhZGVyCiAgICAgIGNsYXNzPSJwYWdlLWhlYWRlciBwYWdlLWhlYWRlci1kYXJrIGJnLWltZy1yZXBlYXQgYmctcHJpbWFyeSIKICAgICAgc3R5bGU9J2JhY2tncm91bmQtaW1hZ2U6IHVybCgiYXNzZXRzL2ltZy9wYXR0ZXJuLXNoYXBlcy5wbmciKScKICAgID4KICAgICAgPGRpdiBjbGFzcz0icGFnZS1oZWFkZXItY29udGVudCI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBhbGlnbi1pdGVtcy1jZW50ZXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbGctNiI+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgY2xhc3M9ImJhZGdlIGJhZGdlLW1hcmtldGluZyBiYWRnZS1waWxsIGJhZGdlLXNlY29uZGFyeS1zb2Z0IHRleHQtc2Vjb25kYXJ5IG1iLTMiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgU2VjY2nDs24gVm90YW50ZXMhCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGgxIGNsYXNzPSJwYWdlLWhlYWRlci10aXRsZSI+CiAgICAgICAgICAgICAgICBWb3RhIGRlIGZvcm1hIGbDoWNpbCEKICAgICAgICAgICAgICA8L2gxPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwYWdlLWhlYWRlci10ZXh0Ij4KICAgICAgICAgICAgICAgIEVudHJhIHkgbWlyYSBsYXMgb3BjaW9uZXMgcXVlIHR1IG9yZ2FuaXphY2nDs24gdGllbmUgcGFyYSB0aS48YnI+CiAgICAgICAgICAgICAgICBWb3RhIGRlIGZvcm1hIHNlZ3VyYSBlbiBsaW5lYSBjb24gTWF5Vm90by4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtd2hpdGUgbXQtNSI+wr9Bw7puIG5vIHRpZW5lcyB1bmEgY3VlbnRhPzwvcD4KICAgICAgICAgICAgICA8cm91dGVyLWxpbmsKICAgICAgICAgICAgICAgIGNsYXNzPSJidG4gYnRuLXdoaXRlIGJ0bi1tYXJrZXRpbmcgcm91bmRlZC1waWxsIgogICAgICAgICAgICAgICAgOnRvPSJ7IHBhdGg6ICcvcmVnaXN0cmFyc2UnIH0iCiAgICAgICAgICAgICAgICA+UmVnw61zdHJhdGUhPC9yb3V0ZXItbGluawogICAgICAgICAgICAgID4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy00Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIHJvdW5kZWQtbGcgdGV4dC1kYXJrIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtaGVhZGVyIHB5LTQiPkVudHJhIGFob3JhITwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICAgICAgPGZvcm0gQHN1Ym1pdC5wcmV2ZW50PSJsb2dpblVzZXIiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJzbWFsbCB0ZXh0LWdyYXktNjAwIiBmb3I9ImxlYWRDYXBFbWFpbCIKICAgICAgICAgICAgICAgICAgICAgICAgPkROSSAvIENvcnJlbzwvbGFiZWwKICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJ1c2VybmFtZSIKICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImZvcm0tY29udHJvbCByb3VuZGVkLXBpbGwiCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ic21hbGwgdGV4dC1ncmF5LTYwMCIgZm9yPSJsZWFkQ2FwRW1haWwiCiAgICAgICAgICAgICAgICAgICAgICAgID5Db250cmFzZcOxYTwvbGFiZWwKICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJwYXNzIgogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIHJvdW5kZWQtcGlsbCIKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0icGFzc3dvcmQiCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGJ0bi1tYXJrZXRpbmcgYnRuLWJsb2NrIHJvdW5kZWQtcGlsbCBtdC00IgogICAgICAgICAgICAgICAgICAgICAgdHlwZT0ic3VibWl0IgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIEluaWNpYXIgU2VzaW9uIQogICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVycm9yIG1iLTMiIHYtaWY9ImVycm9yIj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtZGFuZ2VyIj57eyBlcnJvcl9tZXNzYWdlIH19PC9zcGFuPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJzdmctYm9yZGVyLWFuZ2xlZCB0ZXh0LXdoaXRlIj4KICAgICAgICA8c3ZnCiAgICAgICAgICB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgICAgICAgICB2aWV3Qm94PSIwIDAgMTAwIDEwMCIKICAgICAgICAgIHByZXNlcnZlQXNwZWN0UmF0aW89Im5vbmUiCiAgICAgICAgICBmaWxsPSJjdXJyZW50Q29sb3IiCiAgICAgICAgPgogICAgICAgICAgPHBvbHlnb24gcG9pbnRzPSIwLDEwMCAxMDAsMCAxMDAsMTAwIj48L3BvbHlnb24+CiAgICAgICAgPC9zdmc+CiAgICAgIDwvZGl2PgogICAgPC9oZWFkZXI+CiAgPC9kaXY+CjwvZGl2Pgo="},null]}