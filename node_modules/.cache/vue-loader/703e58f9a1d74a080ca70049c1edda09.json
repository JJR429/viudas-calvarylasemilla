{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/vue/viudas/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/vue/viudas/src/views/Viuda.vue?vue&type=template&id=23b8f2d5&scoped=true&","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/vue/viudas/src/views/Viuda.vue","mtime":1611888121538},{"path":"/Applications/XAMPP/xamppfiles/htdocs/vue/viudas/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/vue/viudas/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/vue/viudas/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/vue/viudas/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}